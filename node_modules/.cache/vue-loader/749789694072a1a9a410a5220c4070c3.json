{"remainingRequest":"/Users/juanfelipelara/Documents/Platzi/Vue JS/Basico/platzi-exchange/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/juanfelipelara/Documents/Platzi/Vue JS/Basico/platzi-exchange/src/views/CoinDetail.vue?vue&type=style&index=0&id=613d02fc&scoped=true&lang=css&","dependencies":[{"path":"/Users/juanfelipelara/Documents/Platzi/Vue JS/Basico/platzi-exchange/src/views/CoinDetail.vue","mtime":1589834204532},{"path":"/Users/juanfelipelara/Documents/Platzi/Vue JS/Basico/platzi-exchange/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/juanfelipelara/Documents/Platzi/Vue JS/Basico/platzi-exchange/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/juanfelipelara/Documents/Platzi/Vue JS/Basico/platzi-exchange/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/juanfelipelara/Documents/Platzi/Vue JS/Basico/platzi-exchange/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/juanfelipelara/Documents/Platzi/Vue JS/Basico/platzi-exchange/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGQgewogIHBhZGRpbmc6IDEwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cg=="},{"version":3,"sources":["CoinDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+MA;AACA;AACA;AACA","file":"CoinDetail.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"flex-col\">\n    <div class=\"flex justify-center\">\n      <clip-loader :loading=\"isLoading\" :color=\"'#68d391'\" :size=\"100\" />\n    </div>\n    <template v-if=\"!isLoading\">\n      <div class=\"flex flex-col sm:flex-row justify-around items-center\">\n        <div class=\"flex flex-col items-center\">\n          <img\n            :alt=\"asset.name\"\n            :src=\"\n              `https://static.coincap.io/assets/icons/${asset.symbol.toLowerCase()}@2x.png`\n            \"\n            class=\"w-20 h-20 mr-5\"\n          />\n          <h1 class=\"text-5xl\">\n            {{ asset.name }}\n            <small class=\"sm:mr-2 text-gray-500\">{{ asset.symbol }}</small>\n          </h1>\n        </div>\n        <div class=\"my-10 flex flex-col\">\n          <ul>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Ranking</b>\n              <span>#{{ asset.rank }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio Actual </b>\n              <span> {{ asset.priceUsd | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio mas Bajo</b>\n              <span>{{ min | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio mas Alto</b>\n              <span> {{ max | dollar }} </span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Precio Promedio</b>\n              <span>{{ avg | dollar }}</span>\n            </li>\n            <li class=\"flex justify-between\">\n              <b class=\"text-gray-600 mr-10 uppercase\">Variacion 24 Hrs</b>\n              <span>{{ asset.changePercent24Hr | percent }}</span>\n            </li>\n          </ul>\n        </div>\n        <div class=\"my-10 sm:mt-0 flex flex-col justify-center text-center\">\n          <button\n            @click=\"toggleConverter\"\n            class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n          >\n            {{ fromUsd ? `USD a ${asset.symbol}` : `BTC a ${asset.name}` }}\n          </button>\n          <div class=\"flex flex-row my-5\">\n            <label class=\"w-full\" for=\"convertValue\">\n              <input\n                v-model=\"convertValue\"\n                type=\"number\"\n                id=\"convertValue\"\n                class=\"text-center bg-white focus:outline-none focus:shadow-outline border border-gray-300\"\n                :placeholder=\"`Valor en ${fromUsd ? 'USD' : asset.symbol}`\"\n              />\n            </label>\n          </div>\n          <span class=\"text-xl\">\n            {{ convertResult }} {{ fromUsd ? asset.symbol : \"USD\" }}</span\n          >\n        </div>\n      </div>\n      <line-chart\n        class=\"my-10\"\n        :colors=\"['orange']\"\n        :min=\"min\"\n        :max=\"max\"\n        :data=\"history.map(h => [h.date, parseFloat(h.priceUsd).toFixed(2)])\"\n      />\n\n      <h3 class=\"text-xl my-10\">\n        Mejores Ofertas de Cambio\n      </h3>\n      <table>\n        <tr\n          v-for=\"m in markets\"\n          :key=\"`${m.exchange}-${m.priceUsd}`\"\n          class=\"border-b\"\n        >\n          <td>\n            <b>{{ m.exchangeId }}</b>\n          </td>\n          <td>{{ m.priceUsd | dollar }}</td>\n          <td>{{ m.baseSymbol }} / {{ m.quoteSymbol }}</td>\n          <td>\n            <px-button\n              :is-loading=\"m.isLoading || false\"\n              v-if=\"!m.url\"\n              @custom-click=\"getWebSite(m)\"\n            >\n              <slot>Obtener Link</slot>\n            </px-button>\n            <!-- <beat-loader\n              v-else\n              :loading=\"isLoading2\"\n              :color=\"'#68d391'\"\n              :size=\"8\"\n            /> -->\n            <a v-else class=\"hover:underline text-green-600\" target=\"_black\">{{\n              m.url\n            }}</a>\n            <!-- <a v-else class=\"hover:underline text-green-600\" target=\"_black\"> {{ m.url }}</a> -->\n          </td>\n        </tr>\n      </table>\n    </template>\n  </div>\n</template>\n\n<script>\nimport api from \"@/api\";\nimport PxButton from \"@/components/PxButton.vue\";\n\nexport default {\n  name: \"CoinDetail\",\n\n  components: { PxButton },\n\n  data() {\n    return {\n      asset: {},\n      history: [],\n      isLoading: false,\n      isLoading2: false,\n      markets: [],\n      fromUsd: true,\n      convertValue: null\n    };\n  },\n  created() {\n    this.getCoin();\n  },\n  computed: {\n    convertResult() {\n      if (!this.convertValue) {\n        return 0;\n      }\n\n      const result = this.fromUsd\n        ? this.convertValue / this.asset.priceUsd\n        : this.convertValue * this.asset.priceUsd;\n\n      return result.toFixed(4);\n    },\n    max() {\n      return Math.max(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      );\n    },\n    min() {\n      return Math.min(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      );\n    },\n    avg() {\n      return Math.abs(\n        ...this.history.map(h => parseFloat(h.priceUsd).toFixed(2))\n      );\n    }\n  },\n  watch: {\n    $route() {\n      this.getCoin();\n    }\n  },\n  methods: {\n    toggleConverter() {\n      this.fromUsd = !this.fromUsd;\n    },\n    getWebSite(exchange) {\n      this.$set(exchange, \"isLoading\", true);\n      return api\n        .getExchange(exchange.exchangeId)\n        .then(res => {\n          this.$set(exchange, \"url\", res.exchangeUrl);\n        })\n        .finally(() => this.$set(exchange, \"isLoading\", false));\n    },\n    getCoin() {\n      const id = this.$route.params.id;\n      this.isLoading = true;\n      Promise.all([\n        api.getAsset(id),\n        api.getAssetHistory(id),\n        api.getMarkets(id)\n      ])\n        .then(([asset, history, markets]) => {\n          this.asset = asset;\n          this.history = history;\n          this.markets = markets;\n        })\n        .finally(() => (this.isLoading = false));\n    }\n  }\n};\n</script>\n\n<style scoped>\ntd {\n  padding: 10px;\n  text-align: center;\n}\n</style>\n"]}]}